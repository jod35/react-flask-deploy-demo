{"version":3,"sources":["auth.js","components/Navbar.js","components/Recipe.js","components/Home.js","components/SignUp.js","components/Login.js","components/CreateRecipe.js","index.js"],"names":["createAuthProvider","accessTokenKey","onUpdateToken","token","fetch","method","body","refresh_token","then","r","json","useAuth","login","logout","LoggedInLinks","className","to","href","onClick","LoggedOutLinks","NavBar","logged","type","id","Recipe","title","description","onDelete","Card","Body","Title","Button","variant","LoggedinHome","useState","recipes","setRecipes","show","setShow","recipeId","setRecipeId","useForm","register","handleSubmit","setValue","errors","formState","useHistory","localStorage","getItem","useEffect","res","data","catch","err","console","log","Modal","onHide","size","Header","closeButton","Form","Group","Label","Control","required","maxLength","style","color","as","rows","requestOptions","headers","JSON","parse","stringify","response","length","map","recipe","index","LoggedOutHome","HomePage","SignUpPage","reset","serverResponse","setServerResponse","Alert","onClose","dismissible","placeholder","username","email","minLength","password","confirmPassword","message","alert","LoginPage","history","access_token","push","CreateRecipePage","App","path","CreateRecipe","Login","SignUp","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8538328.chunk.js","sourcesContent":["import {createAuthProvider} from 'react-token-auth'\n\nexport const [useAuth, authFetch, login, logout] =\n    createAuthProvider({\n        accessTokenKey: 'access_token',\n        onUpdateToken: (token) => fetch('/auth/refresh', {\n            method: 'POST',\n            body: token.refresh_token\n        })\n        .then(r => r.json())\n    })","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAuth ,logout} from '../auth'\n\n\n\n\nconst LoggedInLinks = () => {\n    return (\n        <>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link active\" to=\"/\">Home</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link  active\" to=\"/create_recipe\">Create Recipes</Link>\n            </li>\n            <li className=\"nav-item\">\n                <a className=\"nav-link active\" href=\"#\" onClick={()=>{logout()}}>Log Out</a>\n            </li>\n        </>\n    )\n}\n\n\nconst LoggedOutLinks = () => {\n    return (\n        <>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link active\" to=\"/\">Home</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link active\" to=\"/signup\">Sign Up</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link active\" to=\"/login\" >Login</Link>\n            </li>\n\n        </>\n    )\n}\n\nconst NavBar = () => {\n\n    const [logged] = useAuth();\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">Recipes</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        {logged?<LoggedInLinks/>:<LoggedOutLinks/>}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar","import React from 'react'\nimport { Button, Card } from 'react-bootstrap';\n\n\nconst Recipe=({title,description,onClick,onDelete})=>{\n    return(\n        <Card className=\"recipe\">\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <p>{description}</p>\n                <Button variant=\"primary\" onClick={onClick}>Update</Button>{'     '}\n                <Button variant=\"danger\" onClick={onDelete}>Delete</Button>\n            </Card.Body>\n        </Card>\n    )\n}\n\n\nexport default Recipe;","import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useAuth } from '../auth'\nimport Recipe from './Recipe'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport { useForm } from 'react-hook-form'\n\n\n\n\n\n\nconst LoggedinHome = () => {\n    const [recipes, setRecipes] = useState([]);\n    const [show, setShow] = useState(false);\n    const [recipeId, setRecipeId] = useState(1);\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm()\n\n    const history = useHistory()\n\n    const reload = () => window.location.reload();\n\n    let token = localStorage.getItem('REACT_TOKEN_AUTH_KEY')\n\n\n\n\n    const closeModal = () => {\n        setShow(false)\n    }\n\n\n    useEffect(\n        () => {\n            fetch('/recipe/recipes')\n                .then(res => res.json())\n                .then(data => {\n                    setRecipes(data)\n                })\n                .catch(err => console.log(err))\n        }, []\n    );\n\n    const showModal = (id) => {\n        console.log(\"Hello \", id)\n        setShow(true)\n        setRecipeId(id)\n\n        recipes.map(\n            (recipe) => {\n                if (recipe.id == id) {\n                    setRecipeId(id)\n                    setValue('title', recipe.title)\n                    setValue('description', recipe.description)\n                }\n            }\n        )\n\n    }\n\n\n\n    const getAllRecipes = () => {\n\n        fetch('/recipe/recipes')\n            .then(res => res.json())\n            .then(data => {\n                setRecipes(data)\n            })\n            .catch(err => console.log(err))\n    }\n    const updateRecipe = (data) => {\n\n        console.log(recipeId)\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'content-type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(token)}`\n            },\n\n            body: JSON.stringify(data)\n        }\n\n        fetch(`recipe/recipe/${recipeId}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                getAllRecipes()\n\n            })\n            .catch(err => console.log(err))\n\n        setShow(false)\n    }\n\n\n    const deleteRecipe = (id, index) => {\n        console.log(`deleting ${id}`)\n\n\n        fetch(`/recipe/recipe/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(token)}`\n            }\n        }).then(response => response.json())\n            .then(data => {\n\n                fetch('/recipe/recipes')\n                    .then(res => res.json())\n                    .then(data => {\n                        setRecipes(data)\n                    })\n                    .catch(err => console.log(err))\n\n            })\n\n            .catch(err => console.log(err))\n\n\n    }\n\n    return (\n        <div className=\"recipes container\">\n            <Modal\n                show={show}\n                onHide={closeModal}\n                size=\"lg\"\n\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Update A Recipe</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form>\n                        <Form.Group>\n                            <Form.Label>Title</Form.Label>\n                            <Form.Control type=\"text\"\n                                {...register('title', { required: true, maxLength: 25 })}\n                            />\n                        </Form.Group>\n                        {errors.title && <p style={{ color: 'red' }}><small>Title is required</small></p>}\n                        {errors.title?.type === \"maxLength\" && <p style={{ color: 'red' }}>\n                            <small>Title should be less than 25 characters</small>\n                        </p>}\n                        <Form.Group>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control as=\"textarea\" rows={5}\n                                {...register('description', { required: true, maxLength: 255 })}\n                            />\n                        </Form.Group>\n                        {errors.description && <p style={{ color: 'red' }}><small>Description is required</small></p>}\n                        {errors.description?.type === \"maxLength\" && <p style={{ color: 'red' }}>\n                            <small>Description should be less than 255 characters</small>\n                        </p>}\n                        <br></br>\n                        <Form.Group>\n                            <Button variant=\"primary\" onClick={handleSubmit(updateRecipe)}>\n                                Save\n                            </Button>\n                        </Form.Group>\n                    </form>\n                </Modal.Body>\n\n            </Modal>\n            {\n                recipes.length > 0 ?\n                    <div>\n                        <h1>List of Recipes</h1>\n                        {\n                            recipes.map(\n                                (recipe, index) => (\n                                    <Recipe title={recipe.title}\n                                        onClick={() => { showModal(recipe.id) }}\n                                        key={index}\n                                        description={recipe.description}\n                                        onDelete={() => { deleteRecipe(recipe.id, index) }}\n                                    />\n                                )\n                            )\n                        }\n                    </div> :\n                    <div>\n                        There are currently no recipes\n                    </div>\n            }\n        </div>\n    )\n}\n\n\nconst LoggedOutHome = () => {\n    return (\n        <div className=\"home container\">\n            <h1 className=\"heading\">Welcome to the Recipes</h1>\n            <Link to='/signup' className=\"btn btn-primary btn-lg\">Get Started</Link>\n        </div>\n    )\n}\n\nconst HomePage = () => {\n\n    const [logged] = useAuth()\n\n    return (\n        <div>\n            {logged ? <LoggedinHome /> : <LoggedOutHome />}\n        </div>\n    )\n}\n\nexport default HomePage","import React, { useState } from 'react'\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\n\n\nconst SignUpPage = () => {\n\n\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    const [show,setShow]=useState(false)\n    const [serverResponse,setServerResponse]=useState('')\n\n    const submitForm = (data) => {\n\n\n        if (data.password === data.confirmPassword) {\n\n\n            const body = {\n                username: data.username,\n                email: data.email,\n                password: data.password\n            }\n\n            const requestOptions = {\n                method: \"POST\",\n                headers: {\n                    'content-type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            }\n\n\n            fetch('/auth/signup', requestOptions)\n                .then(res => res.json())\n                .then(data =>{\n                    console.log(data)\n                    setServerResponse(data.message)\n                    setShow(true)\n                })\n                .catch(err => console.log(err))\n\n            reset()\n        }\n\n        else {\n            alert(\"Passwords do not match\")\n        }\n\n\n    }\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"form\">\n\n                \n               {show?\n               <>\n                <Alert variant=\"success\" onClose={() => {setShow(false)\n                }} dismissible>\n                <p>\n                   {serverResponse}\n                </p>\n                </Alert>\n\n                <h1>Sign Up Page</h1>\n                \n                </>\n                :\n                <h1>Sign Up Page</h1>\n               \n               }\n                <form>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\"\n                            placeholder=\"Your username\"\n                            {...register(\"username\", { required: true, maxLength: 25 })}\n                        />\n\n                        {errors.username && <small style={{ color: \"red\" }}>Username is required</small>}\n                        {errors.username?.type === \"maxLength\" && <p style={{ color: \"red\" }}><small>Max characters should be 25 </small></p>}\n                    </Form.Group>\n                    <br></br>\n                    <Form.Group>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\"\n                            placeholder=\"Your email\"\n                            {...register(\"email\", { required: true, maxLength: 80 })}\n                        />\n\n                        {errors.email && <p style={{ color: \"red\" }}><small>Email is required</small></p>}\n\n                        {errors.email?.type === \"maxLength\" && <p style={{ color: \"red\" }}><small>Max characters should be 80</small></p>}\n                    </Form.Group>\n                    <br></br>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\"\n                            placeholder=\"Your password\"\n                            {...register(\"password\", { required: true, minLength: 8 })}\n\n                        />\n\n                        {errors.password && <p style={{ color: \"red\" }}><small>Password is required</small></p>}\n                        {errors.password?.type === \"minLength\" && <p style={{ color: \"red\" }}><small>Min characters should be 8</small></p>}\n                    </Form.Group>\n                    <br></br>\n                    <Form.Group>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Your password\"\n                            {...register(\"confirmPassword\", { required: true, minLength: 8 })}\n                        />\n                        {errors.confirmPassword && <p style={{ color: \"red\" }}><small>Confirm Password is required</small></p>}\n                        {errors.confirmPassword?.type === \"minLength\" && <p style={{ color: \"red\" }}><small>Min characters should be 8</small></p>}\n                    </Form.Group>\n                    <br></br>\n                    <Form.Group>\n                        <Button as=\"sub\" variant=\"primary\" onClick={handleSubmit(submitForm)}>SignUp</Button>\n                    </Form.Group>\n                    <br></br>\n                    <Form.Group>\n                        <small>Already have an account, <Link to='/login'>Log In</Link></small>\n                    </Form.Group>\n                    <br></br>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUpPage","import React, { useState } from 'react'\nimport {Form,Button} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport {useForm} from 'react-hook-form'\nimport { login } from '../auth'\nimport {useHistory} from 'react-router-dom'\n\n\nconst LoginPage=()=>{\n    \n    const {register,handleSubmit,reset,formState:{errors}}=useForm()\n\n    const history=useHistory()\n    \n\n\n    const loginUser=(data)=>{\n       console.log(data)\n\n       const requestOptions={\n           method:\"POST\",\n           headers:{\n               'content-type':'application/json'\n           },\n           body:JSON.stringify(data)\n       }\n        \n       fetch('/auth/login',requestOptions)\n       .then(res=>res.json())\n       .then(data=>{\n           console.log(data.access_token)\n           \n           if (data){\n            login(data.access_token)\n\n            history.push('/')\n           }\n           else{\n               alert('Invalid username or password')\n           }\n\n\n       })\n\n\n\n       reset()\n    }\n\n    return(\n        <div className=\"container\">\n        <div className=\"form\">\n            <h1>Login Page</h1>\n            <form>\n                <Form.Group>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\"\n                        placeholder=\"Your username\"\n                        {...register('username',{required:true,maxLength:25})}\n                    />\n                </Form.Group>\n                {errors.username && <p style={{color:'red'}}><small>Username is required</small></p>}\n                {errors.username?.type === \"maxLength\" && <p style={{color:'red'}}><small>Username should be 25 characters</small></p>}\n                <br></br>\n               \n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\"\n                        placeholder=\"Your password\"\n                        {...register('password',{required:true,minLength:8})}\n                    />\n                </Form.Group>\n                {errors.username && <p style={{color:'red'}}><small>Password is required</small></p>}\n                {errors.password?.type === \"maxLength\" && <p style={{color:'red'}}>\n                    <small>Password should be more than 8 characters</small>\n                    </p>}\n                <br></br>\n                <Form.Group>\n                    <Button as=\"sub\" variant=\"primary\" onClick={handleSubmit(loginUser)}>Login</Button>\n                </Form.Group>\n                <br></br>\n                <Form.Group>\n                    <small>Do not have an account? <Link to='/signup'>Create One</Link></small>\n                </Form.Group>\n                \n            </form>\n        </div>\n    </div>\n    )\n}\n\nexport default LoginPage","import React from 'react'\nimport { Form,Button } from 'react-bootstrap'\nimport {useForm} from 'react-hook-form'\nimport { useHistory } from 'react-router-dom'\n\n\nconst CreateRecipePage=()=>{\n\n    const {register,handleSubmit,reset,formState:{errors}}=useForm()\n    const history=useHistory()\n\n    const createRecipe=(data)=>{\n        console.log(data)\n\n        const token=localStorage.getItem('REACT_TOKEN_AUTH_KEY');\n        console.log(token)\n\n\n        const requestOptions={\n            method:'POST',\n            headers:{\n                'content-type':'application/json',\n                'Authorization':`Bearer ${JSON.parse(token)}`\n            },\n            body:JSON.stringify(data)\n\n        }\n\n        fetch('/recipe/recipes',requestOptions)\n        .then(res=>res.json())\n        .then(data=>{\n            console.log(data)\n            history.push('/')\n        })\n        .catch(err=>console.log(err))\n\n    }\n\n    return(\n        <div className=\"container\">\n            <h1>Create A Recipe</h1>\n            <form>\n                <Form.Group>\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control type=\"text\" \n                        {...register('title',{required:true,maxLength:25})}\n                    />\n                </Form.Group>\n                {errors.title && <p style={{color:'red'}}><small>Title is required</small></p>}\n                {errors.title?.type === \"maxLength\" && <p style={{color:'red'}}>\n                    <small>Title should be less than 25 characters</small>\n                    </p>}\n                <Form.Group>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={5}\n                        {...register('description',{required:true,maxLength:255})}\n                    />\n                </Form.Group>\n                {errors.description && <p style={{color:'red'}}><small>Description is required</small></p>}\n                {errors.description?.type === \"maxLength\" && <p style={{color:'red'}}>\n                    <small>Description should be less than 255 characters</small>\n                    </p>}\n                <br></br>\n                <Form.Group>\n                    <Button variant=\"primary\" onClick={handleSubmit(createRecipe)}>\n                        Save\n                    </Button>\n                </Form.Group>\n            </form>\n        </div>\n    )\n}\n\nexport default CreateRecipePage","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/main.css'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport NavBar from './components/Navbar';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom'\r\nimport HomePage from './components/Home';\r\nimport SignUpPage from './components/SignUp';\r\nimport LoginPage from './components/Login';\r\nimport CreateRecipePage from './components/CreateRecipe';\r\n\r\n\r\n\r\n\r\nconst App=()=>{\r\n\r\n    \r\n    return (\r\n        <Router>\r\n        <div className=\"\">\r\n            <NavBar/>\r\n            <Switch>\r\n                <Route path=\"/create_recipe\">\r\n                    <CreateRecipePage/>\r\n                </Route>\r\n                <Route path=\"/login\">\r\n                    <LoginPage/>\r\n                </Route>\r\n                <Route path=\"/signup\">\r\n                    <SignUpPage/>                \r\n                </Route>    \r\n                <Route path=\"/\">\r\n                    <HomePage/>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}